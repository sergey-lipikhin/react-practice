{"version":3,"sources":["components/ProductTable/ProductTable.jsx","api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["ProductTable","props","products","className","href","map","product","id","name","category","user","icon","title","classNames","sex","ownerId","categoryId","categoriesFromServer","find","categoryFromServer","usersFromServer","userFromServer","categoriesToFilter","isSelected","App","useState","isAllUsersSelected","setIsAllUsersSelected","selectedUserId","setSelectedUserId","searchQuery","setSearchQuery","isAllCategoriesSelected","setIsAllCategoriesSelected","selectedCategories","setSelectedCategories","selectAllCategories","prevSelectedCategories","prevSelectedCategory","visibleProducts","isAllSelected","userId","query","productsToFilter","filter","filterProductsByUser","toLowerCase","includes","trim","filerProductsByQuery","onlySelectedCategoriesId","filerProductsByCategory","getVisibleProducts","onClick","type","placeholder","value","onChange","event","target","selectedCategoryId","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ecfd4ac.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nexport const ProductTable = (props) => {\n  const { products } = props;\n\n  return (\n    <table\n      data-cy=\"ProductTable\"\n      className=\"table is-striped is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              ID\n\n              <a href=\"#/\">\n                <span className=\"icon\">\n                  <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Product\n\n              <a href=\"#/\">\n                <span className=\"icon\">\n                  <i data-cy=\"SortIcon\" className=\"fas fa-sort-down\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Category\n\n              <a href=\"#/\">\n                <span className=\"icon\">\n                  <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              User\n\n              <a href=\"#/\">\n                <span className=\"icon\">\n                  <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {products.map((product) => {\n          const {\n            id,\n            name,\n            category,\n            user,\n          } = product;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"Product\"\n            >\n              <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                {id}\n              </td>\n\n              <td data-cy=\"ProductName\">\n                {name}\n              </td>\n\n              <td data-cy=\"ProductCategory\">\n                {`${category?.icon} - ${category?.title}`}\n              </td>\n\n              <td\n                data-cy=\"ProductUser\"\n                className={classNames(\n                  {\n                    'has-text-link': user?.sex === 'm',\n                    'has-text-danger': user?.sex === 'f',\n                  },\n                )}\n              >\n                {user?.name}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { ProductTable } from './components/ProductTable';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer.find(categoryFromServer => (\n    categoryFromServer.id === product.categoryId\n  )) || null;\n\n  const user = usersFromServer.find(userFromServer => (\n    userFromServer.id === category.ownerId\n  )) || null;\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nconst categoriesToFilter = categoriesFromServer.map(({ id, title }) => (\n  {\n    id,\n    title,\n    isSelected: false,\n  }\n));\n\nfunction filterProductsByUser(productsToFilter, isAllSelected, userId) {\n  if (isAllSelected) {\n    return productsToFilter;\n  }\n\n  return productsToFilter.filter(product => (\n    product.user?.id === userId\n  ));\n}\n\nfunction filerProductsByQuery(productsToFilter, query) {\n  return productsToFilter.filter(product => (\n    product.name.toLowerCase().includes(query.trim().toLowerCase())\n  ));\n}\n\nfunction filerProductsByCategory(\n  productsToFilter,\n  isAllCategoriesSelected,\n  selectedCategories,\n) {\n  if (isAllCategoriesSelected) {\n    return productsToFilter;\n  }\n\n  const onlySelectedCategoriesId = selectedCategories\n    .filter(category => category.isSelected)\n    .map(category => category.id);\n\n  return productsToFilter.filter(product => (\n    onlySelectedCategoriesId.includes(product.category.id)\n  ));\n}\n\nfunction getVisibleProducts(\n  isAllSelected,\n  userId,\n  query,\n  isAllCategoriesSelected,\n  selectedCategories,\n) {\n  let visibleProducts = [...products];\n\n  visibleProducts\n    = filterProductsByUser(visibleProducts, isAllSelected, userId);\n\n  visibleProducts\n    = filerProductsByQuery(visibleProducts, query);\n\n  visibleProducts\n    = filerProductsByCategory(visibleProducts,\n      isAllCategoriesSelected, selectedCategories);\n\n  return visibleProducts;\n}\n\nexport const App = () => {\n  const [isAllUsersSelected, setIsAllUsersSelected] = useState(true);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [isAllCategoriesSelected, setIsAllCategoriesSelected] = useState(true);\n  const [selectedCategories, setSelectedCategories]\n    = useState(categoriesToFilter);\n\n  const resetAllFilters = () => {\n    setIsAllUsersSelected(true);\n    setSearchQuery('');\n    selectAllCategories();\n  };\n\n  const selectAllCategories = () => {\n    setIsAllCategoriesSelected(true);\n    setSelectedCategories(prevSelectedCategories => (\n      [...prevSelectedCategories.map(prevSelectedCategory => ({\n        ...prevSelectedCategory,\n        isSelected: false,\n      }))]\n    ));\n  };\n\n  const selectCategory = (selectedCategoryId) => {\n    setIsAllCategoriesSelected(false);\n    setSelectedCategories(prevSelectedCategories => (\n      [...prevSelectedCategories.map(prevSelectedCategory => (\n        prevSelectedCategory.id === selectedCategoryId\n          ? {\n            ...prevSelectedCategory,\n            isSelected: !prevSelectedCategory.isSelected,\n          }\n          : {\n            ...prevSelectedCategory,\n          }\n      ))]\n    ));\n  };\n\n  const visibleProducts\n    = getVisibleProducts(isAllUsersSelected, selectedUserId, searchQuery,\n      isAllCategoriesSelected, selectedCategories);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={classNames(\n                  {\n                    'is-active': isAllUsersSelected,\n                  },\n                )}\n                onClick={() => {\n                  setIsAllUsersSelected(true);\n                }}\n              >\n                All\n              </a>\n              {usersFromServer.map(user => (\n                <a\n                  key={user.id}\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  className={classNames(\n                    {\n                      'is-active': !isAllUsersSelected\n                      && user?.id === selectedUserId,\n                    },\n                  )}\n                  onClick={() => {\n                    setIsAllUsersSelected(false);\n                    setSelectedUserId(user?.id);\n                  }}\n                >\n                  {user?.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={searchQuery}\n                  onChange={event => (\n                    setSearchQuery(event.target.value)\n                  )}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {searchQuery && (\n                  <span className=\"icon is-right\">\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setSearchQuery('')}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={classNames(\n                  'button',\n                  'is-success',\n                  'mr-6',\n                  {\n                    'is-outlined': !isAllCategoriesSelected,\n                  },\n                )}\n                onClick={selectAllCategories}\n              >\n                All\n              </a>\n\n              {selectedCategories.map(category => (\n                <a\n                  key={category.id}\n                  data-cy=\"Category\"\n                  className={classNames(\n                    'button',\n                    'mr-2',\n                    'my-1',\n                    {\n                      'is-info': category.isSelected,\n                    },\n                  )}\n                  href=\"#/\"\n                  onClick={() => selectCategory(category.id)}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={resetAllFilters}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {!visibleProducts.length\n            ? (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            ) : (\n              <ProductTable products={visibleProducts} />\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}